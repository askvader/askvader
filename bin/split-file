#!/usr/bin/env runghc
-- vi:syntax=haskell
{-# LANGUAGE OverloadedStrings #-}

{- Utility for splitting big .av files containing let-expressions.

  split-file x.av dir/

will split the file x.av and place results in dir/, thus:

- File is split after each \n that is the END of the last line containing code (e.g. not just WS or comments)
  immediately preceding a line starting with 'let'.
- The binding "let foo : T = E" places "let foo : T = E in foo" in the output file "foo.av"
- Each file is prepended by one let-line for each preceding definition

Example: This

    let X = Natural
    let foo = 1 : X
    -- About bar
    let bar = foo + 1
    in bar

becomes

./X
let X = Natural in X

./foo
let X = ./X
let foo = 1 : X in foo

./bar
let X = ./X
let foo = ./foo
-- About bar
let bar = foo + 1 in bar

As a utility, record files called package... are created, one per kind. Specifically:
  ./package         All lowercase names.
  ./packateTypes    All uppercase names of the form "let ... : Type = ..."

For the above example:

./package
in { foo = ./foo, bar = ./bar }

./packageTypes
let X = ./X
in { X = ./X }

TODO other kinds?
-}
